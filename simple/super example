abstract class All{
  def before(): Unit = println("before...")
  def something(): Unit = println("something...")
  def after(): Unit = println("after...")
  def pass(): Unit
}

abstract class Something extends All{
  override def something(): Unit = println("something in something...")
  override def pass(): Unit = {
    super.before
    something
    super.after
  }
}

val universe: Something = new Something{}
universe.pass
