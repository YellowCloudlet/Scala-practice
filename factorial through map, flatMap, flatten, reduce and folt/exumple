////////////////////////map//////////////////////////
def factorial(value: Int): Int = value match {
  case 0 => 1
  case _ => value * factorial(value - 1)
}

val number = List(5)

number.map(value => factorial(value))

//////////////////////flatMap////////////////////////
/////////////////////+flatten////////////////////////
def factorial(value: Int): Int = value match {
  case 0 => 1
  case _ => value * factorial(value - 1)
}

val number = List(5)

number.flatMap(value => Some(factorial(value)))

///////////////////////fold//////////////////////////
def factorial(a: Int, b:Int): Int = (a,b) match {
  case (0,0) => 1
  case (a,b) => a * factorial(a-1,b-1)
}

val number = List(5)

number.foldLeft(5)(factorial)

//////////////////////reduce/////////////////////////
def factorial(a: Int, b:Int): Int = (a,b) match {
  case (0,0) => 1
  case (a,b) => a * factorial(a-1,b-1)
}

val number = List(5,5)

number.reduce(factorial)
